//第一个错误的版本
//假定有n个版本[1...n], 找出其中第一个错误的版本(后面的版本都是基于前面的版本开发的)
//第一个错误的版本后全都是错的.

	int firstBadVersion(int n) {
        //isBadVersion 用来进行判断的
        // 1-n这些个数字 找出错误版本号---但是使得调用接口函数(isBadVersion())的次数尽可能的少
        // 二分查找 --- 目的就是找出第一个错误的版本
        int l = 1, r = n;
        while(l < r){
            
            //把情况都列举出来
            int mid = l + (r - l) / 2;// **key 二分查找防止溢出的方法
            
            if(!isBadVersion(mid)){ // 错误的版本之后都是错误的
                l = mid + 1;//不错的时候 就从mid往后找
            }
            else r = mid;
        }
    
        return l;
    }