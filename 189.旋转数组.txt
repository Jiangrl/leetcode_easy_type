//旋转数组
//给定一个数组, 将数组元素向右移动k个位置

	void rotate(vector<int>& nums, int k) {
        
        //怎么样在原数组上移动 而不丢失数据
        // 我们发现其实就是将整个数组分成两部分 --- 然后分别逆置
        
        // 问题就转换为对两个数组进行原地逆置
        if(nums.size() == 1 || k == 0) return;//对特殊的情况进行分析
        
        k %= nums.size(); // 只需要做小于的部分即可 --- 超过起始就是多做了一次左右元素移动回到原序列的操作!
        //注意下标 防止溢出！
        reverse(nums, 0, nums.size() - k - 1);
        reverse(nums, nums.size() - k, nums.size() - 1);
        reverse(nums, 0, nums.size() - 1); 
    }
    
    void reverse(vector<int>& nums, int l, int r){// 重写一个逆置的函数
        while(l < r){
            int temp = nums[l];
            nums[l] = nums[r];
            nums[r] = temp;
            l ++;
            r --;
        }
    }