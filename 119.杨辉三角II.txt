//杨辉三角II
//给定一个非负索引k, 返回杨辉三角的第k + 1行

//首先我们知道杨辉三角中的每个数是其左上方和右上方数之和
//第k行 在过程中进行迭代 计算出每个位置上的新值(覆盖了前面的行的数 知道目标所求值) k = 3的过程:
// 1 1 1 1
// 1 1 1 1
// 1 1 1 1
// 1 2 1 1
// 1 3 3 1 

    //或使用公式 直接使用组合公式C(n,i) = n!/(i!*(n-i)!)
    // 第(i+1)项是第i项的倍数=(n-i)/(i+1)
    vector<int> getRow(int rowIndex) { // 给定的行数 按照题目中的测试案例 第一个1 表示第0行!
        
        vector<int> res(rowIndex + 1, 1);
        
        for(int i = 0; i <= rowIndex; i ++){ //注意这里是非0索引k
            
            for(int j = i - 1; j > 0; j --){
                res[j] = res[j - 1] + res[j];
            }
        }
        return res;
    }