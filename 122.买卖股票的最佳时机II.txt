//买卖股票的最佳时机II
//给定一个数组 nums[i]即是一个给定元素的第i的价格
//此时可以进行多次交易买卖 即多次买入卖出(但下一次买入前必须卖掉上一个股票)

	//相比较与1,你可以多次买卖，但是利润的计算方法还是一样
    int maxProfit(vector<int>& prices) {
        //限制：你可以对一只股同时进行很多次操作，但是一次只能操作一只股
        //还有就是在这个操作中你每次只能往后 例如不能在第三天卖了 再去管第二天的价格
        
        
        //这次就是做一个利润之和 保证在往后遍历的时间内 获利即可
        int len = prices.size(); 
        
        int res = 0;
        
        //根据题目的意思是今天卖了就能买入了  today - yesterday + tomorrow - today. 所以我们在发现前后两天有利润(正)即可卖出再进行下一笔交易了 
        for(int i = 0; i < len - 1; i ++){
            if(prices[i + 1] > prices[i]){ 
                res = res + (prices[i + 1] - prices[i]);
            }
        }
           
        return res;
    }